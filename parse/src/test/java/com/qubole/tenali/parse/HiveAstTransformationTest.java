package com.qubole.tenali.parse;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.qubole.tenali.parse.config.CommandContext;
import com.qubole.tenali.util.SqlCommandTestHelper;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class HiveAstTransformationTest {

    private String getTransformedString(Object ast) throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        String res = objectMapper.writeValueAsString(ast);
        System.out.println("RES => " + res);
        return res;
    }

    @Test
    public void testShow() throws Exception {
        String command = "show partitions core.fact_rides";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }


    @Test
    public void testCTEWithAlias() throws Exception {
        String command = "WITH CTE_Local AS\n\n\n" +
                "    (\n" +
                "        SELECT\n" +
                "            a.requestid,\n" +
                "            a.hotelid AS ExpediaID,\n" +
                "         to_date(a.trxlogtimestamp) as Shopdate,\n" +
                "            ROW_NUMBER() OVER (PARTITION BY a.requestid, a.inventoryproviderid ORDER BY\n" +
                "                CASE WHEN (a.baseprice= 0 or a.availability = 0) THEN 100000000 \n" +
                "                ELSE a.baseprice\n" +
                "            END asc) AS RecordOrder,\n" +
                "            a.tpid,\n" +
                "            a.inventoryproviderid,\n" +
                "            a.MarketingChannelID,\n" +
                "            a.Occupancy,\n" +
                "            concat(substring(a.checkin, 1, 10), substring(a.checkin, length(a.checkin) - 4)) AS CheckIn,\n" +
                "            concat(substring(a.checkout, 1, 10), substring(a.checkout, length(a.checkout) - 4)) AS CheckOut,\n" +
                "            a.LoS,\n" +
                "            a.RoomTypeID,\n" +
                "            a.RatePlanID,\n" +
                "            a.RatePlanType,\n" +
                "            a.MerchantModel,\n" +
                "            CASE WHEN (a.BasePrice = 0 or a.Availability = 0) THEN NULL ELSE BasePrice END as BasePrice,\n" +
                "            CASE WHEN (a.BasePrice = 0 or a.Availability = 0) THEN NULL ELSE PriceCurrency END as PriceCurrency,\n" +
                "            CASE WHEN (a.BasePrice = 0 or a.Availability = 0) THEN NULL ELSE TaxAndFeesPrice END as TaxAndFeesPrice,\n" +
                "            CASE WHEN (a.BasePrice = 0 or a.Availability = 0) THEN NULL ELSE NonDispTaxAndFeesPrice END as NonDispTaxAndFeesPrice,\n" +
                "            CASE WHEN (a.BasePrice = 0 or a.Availability = 0) THEN NULL ELSE BasePrice + TaxAndFeesPrice + NonDispTaxAndFeesPrice END as BasePriceIncludingTax,\n" +
                "            CASE WHEN (a.BaseCost = 0 or a.Availability = 0) THEN NULL ELSE BaseCost END as BaseCost,\n" +
                "            CASE WHEN (a.BaseCost = 0 or a.Availability = 0) THEN NULL ELSE CostCurrency END as CostCurrency,\n" +
                "            CASE WHEN (a.BaseCost = 0 or a.Availability = 0) THEN NULL ELSE TaxAndFeesCost END as TaxAndFeesCost,\n" +
                "            CASE WHEN (a.BaseCost = 0 or a.Availability = 0) THEN NULL ELSE NonDispTaxAndFeesCost END as NonDispTaxAndFeesCost,\n" +
                "            CASE WHEN (a.BaseCost = 0 or a.Availability = 0) THEN NULL ELSE BaseCost + TaxAndFeesCost + NonDispTaxAndFeesCost END as BaseCostIncludingTax,\n" +
                "            CASE WHEN (a.BaseCost = 0 or a.Availability = 0) THEN NULL ELSE a.CurrencyExchangeRate END as CurrencyExchangeRate,\n" +
                "            a.availability AS Availability,\n" +
                "            COALESCE(a.unavailablecodelist, 0) as unAvailCode,\n" +
                "            concat('2019-', a.LogMonth, '-', a.LogDay, ' ', a.LogHour, ':00:00') AS LogDate\n" +
                "        FROM\n" +
                "            project_lps_multisource.lpas_analytics_log_2019 a\n" +
                "        WHERE\n" +
                "            a.LogMonth = '05'\n" +
                "        AND\n" +
                "            a.LogDay = '04'\n" +
                "        AND\n" +
                "            a.LogHour >= '00'\n" +
                "        AND\n" +
                "            a.LogHour <= '05'\n" +
                "        AND\n" +
                "            (inventoryproviderid > 80 OR inventoryproviderid = 24)  -- Third Party or Expedia Merchant\n" +
                "        AND\n" +
                "            a.availability IS NOT NULL\n" +
                "    )\n" +
                "    SELECT\n" +
                "        a.RequestID,\n" +
                "        a.ExpediaID,\n" +
                "        a.Shopdate,\n" +
                "        a.TPid,\n" +
                "        a.InventoryProviderID,\n" +
                "        a.MarketingChannelID,\n" +
                "        a.Occupancy,\n" +
                "        a.CheckIn,\n" +
                "        a.CheckOut,\n" +
                "        a.LoS,\n" +
                "        a.RoomTypeID,\n" +
                "        a.RatePlanID,\n" +
                "        a.RatePlanType,\n" +
                "        a.MerchantModel,\n" +
                "        a.Availability,\n" +
                "        a.unAvailCode,\n" +
                "        a.BasePrice,\n" +
                "        a.PriceCurrency,\n" +
                "        a.TaxAndFeesPrice,\n" +
                "        a.NonDispTaxAndFeesPrice,\n" +
                "        a.BasePriceIncludingTax,\n" +
                "        a.BaseCost,\n" +
                "        a.CostCurrency,\n" +
                "        a.TaxAndFeesCost,\n" +
                "        a.NonDispTaxAndFeesCost,\n" +
                "        a.BaseCostIncludingTax,\n" +
                "        a.CurrencyExchangeRate,\n" +
                "        a.LogDate\n" +
                "    FROM\n" +
                "        CTE_Local a\n" +
                "    WHERE\n" +
                "        RecordOrder = 1 ";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }


    @Test
    public void testCreateTableWithProps() throws Exception {
        String command = "CREATE EXTERNAL TABLE IF NOT EXISTS city.fact_airport_fees (\n" +
                "                display_name                    STRING          COMMENT 'line item name configured in regions e.x. ABE Airport - Airport Fee'\n" +
                "                ,metadata                       STRING          COMMENT 'metadata containing pickup/dropoff designation as well as other info'\n" +
                "                ,regions_map_layer              STRING          COMMENT 'layer name where salestax fee is configured, this table is filtered to the airport layer'\n" +
                "                ,amount                         DECIMAL(38,2)   COMMENT 'amount collected in dollars (or currency equivalent unit)'\n" +
                "                ,currency                       STRING          COMMENT 'currency for amount in dollars i.e. 2 = $2.00'\n" +
                "                ,ride_id                        BIGINT          COMMENT 'unique ride identifier'\n" +
                "                ,route_id                       STRING          COMMENT 'unique route identifier for line rides'\n" +
                "                ,driver_lyft_id                 BIGINT          COMMENT 'unique driver identifier (driver_lyft_id from rides table)'\n" +
                "                ,passenger_lyft_id              BIGINT          COMMENT 'unique passenger identifier (passenger_lyft_id from rides table)'\n" +
                "                ,plate                          STRING          COMMENT 'license plate'\n" +
                "                ,state                          STRING          COMMENT 'state of license plate'\n" +
                "                ,make                           STRING          COMMENT 'vehicle make'\n" +
                "                ,model                          STRING          COMMENT 'vehicle model'\n" +
                "                ,year                           STRING          COMMENT 'vehicle year'\n" +
                "                ,ride_type                      STRING          COMMENT 'ride type i.e. courier, classic etc'\n" +
                "                ,ride_type_external             STRING          COMMENT 'external ride type i.e. line, standard etc'\n" +
                "                ,event_type                     STRING          COMMENT 'PickUp or DropOff - parsed from metadata'\n" +
                "                ,occurred_at_utc                TIMESTAMP       COMMENT 'UTC of pickup or dropoff determined by metadata'\n" +
                "                ,occurred_at_local              TIMESTAMP       COMMENT 'Localized pickup or dropoff time determined by metadata'\n" +
                "                ,lat                            DOUBLE          COMMENT 'Latitude of pickup or dropoff determined by metadata'\n" +
                "                ,lng                            DOUBLE          COMMENT 'Longitude of pickup or dropoff determined by metadata'\n" +
                "                ,line_item_ds                   STRING          COMMENT 'ds inherited from core.ride_route_line_items'\n" +
                "        )\n" +
                "    PARTITIONED BY(ds STRING COMMENT 'ds inherited from base.rides')\n" +
                "    STORED AS PARQUET\n" +
                "    LOCATION 's3://lyftqubole-iad/qubole/t/seeftr/PRODUCTION/city/table_name=fact_airport_fees'\n" +
                "    TBLPROPERTIES ('PARQUET.COMPRESS'='SNAPPY')  ";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }


    @Test
    public void testCTEComplex() throws Exception {
        String command = "WITH events AS (\n" +
                "SELECT event_id                               AS event_key,\n" +
                "       driver_lyft_id                         AS driver_key,\n" +
                "       ride_id                                AS ride_key,\n" +
                "       NULL                                   AS offense_lat,\n" +
                "       NULL                                   AS offense_lng,\n" +
                "       FROM_JSON('{}', 'map<string,string>')             AS offense_extra,\n" +
                "       occurred_at                            AS occurred_at,\n" +
                "       'contact_post_pickup'            AS offense_name,\n" +
                "       DATE_FORMAT(occurred_at, 'yyyy-MM-dd') AS ds\n" +
                "  FROM default.event_drivermonitor_offense_issued_contact_post_pickup\n" +
                " WHERE ds BETWEEN '2019-05-02' AND '2019-05-03'\n" +
                "), events_merged AS (\n" +
                " SELECT *\n" +
                "   FROM events\n" +
                "  UNION ALL\n" +
                " SELECT *\n" +
                "   FROM base.drivermonitor_offenses\n" +
                "  WHERE ds IN (SELECT DISTINCT ds FROM events)\n" +
                "    AND offense_name = 'contact_post_pickup'\n" +
                "), events_deduped AS (\n" +
                " SELECT sub.*\n" +
                "   FROM (\n" +
                " SELECT *,\n" +
                "        ROW_NUMBER() OVER (PARTITION BY event_key ORDER BY occurred_at DESC) AS rank\n" +
                "   FROM events_merged\n" +
                "        ) sub\n" +
                "  WHERE sub.rank = 1\n" +
                ")\n" +
                "\n" +
                " INSERT OVERWRITE TABLE base.drivermonitor_offenses PARTITION(offense_name='contact_post_pickup', ds)\n" +
                " SELECT event_key,\n" +
                "        driver_key,\n" +
                "        ride_key,\n" +
                "        offense_lat,\n" +
                "        offense_lng,\n" +
                "        offense_extra,\n" +
                "        occurred_at,\n" +
                "        ds\n" +
                "   FROM events_deduped\n" +
                "  WHERE ds BETWEEN '2018-01-01' AND '2019-05-03'";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        while(ctx != null) {
            System.out.println(ctx.getStmt());
            ctx = ctx.getChild();
        }

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }


    @Test
    public void testMisc1() throws Exception {
        String command = "CREATE DATABASE IF NOT EXISTS audModeling;USE audModeling;DROP TABLE IF EXISTS auddef_counts_1024495;CREATE EXTERNAL TABLE IF NOT EXISTS auddef_counts_1024495 (id String, segment int, score decimal(15,15), source_flag int) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LOCATION 's3://dlx-prod-audience/post_processing/114592/working/40614/MaxCount/51697'";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }

    @Test
    public void testMisc2() throws Exception {
        String command = "    ;\u0006\u0006    CREATE TEMPORARY TABLE 1802415aafd948d5b18f42dbc8e9303e_tmp AS SELECT count(execution_id) as numTestRuns\u0006        FROM mbtest.test_runs AS test_runs\u0006        WHERE test_runs.ran_at >= '2019-03-01';\u0006    CREATE EXTERNAL TABLE 1802415aafd948d5b18f42dbc8e9303e LIKE 1802415aafd948d5b18f42dbc8e9303e_tmp STORED AS PARQUET;\u0006    ALTER TABLE 1802415aafd948d5b18f42dbc8e9303e SET LOCATION 's3://lyft-modelbuilder/57/production/2ece7fa338154f8290b65b1b19efa25b/';\u0006\u0006    INSERT OVERWRITE TABLE 1802415aafd948d5b18f42dbc8e9303e\u0006        SELECT\u0006            numTestRuns as numTestRuns\u0006        FROM 1802415aafd948d5b18f42dbc8e9303e_tmp;\u0006    DROP TABLE 1802415aafd948d5b18f42dbc8e9303e;\u0006    \"\n";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }


    @Test
    public void testMisc() throws Exception {
        String command = "-- ness_user_replay_data.from_hive owner edward\nINSERT OVERWRITE DIRECTORY 's3://prd-dwhlatest-text.datalake.nextdoor.com/tmp__bridge/prd/1days/ness_user_replay_data/20190506T000000/'\\nROW FORMAT DELIMITED\\nFIELDS TERMINATED BY '\\\\001'\\n\\n            SELECT\\n  cast(get_json_object(val, '$.profile_id') AS bigint)             AS profile_id\\n, cast(get_json_object(val, '$.email_limit') AS int)               AS email_limit\\n, cast(get_json_object(val, '$.push_limit') AS int)                AS push_limit\\n, cast(get_json_object(val, '$.epoch') AS bigint)                  AS epoch\\n, cast(get_json_object(val, '$.timestamp') AS bigint)              AS ts\\nFROM prd_json.events e\\nWHERE e.event_type = 'NESS_USER_REPLAY_DATA'\\nAND e.ds = '2019-05-06'";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        getTransformedString(ast);
    }



    @Test
    public void testSetStmt() throws Exception {
        String command = "set   a = b";

        String result = "{\"type\":\"set\",\"key\":\"a\",\"value\":\"b\"}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testSimpleLateralView() throws Exception {
        String command = "describe table;;set role admin;set   a = b; select name, myq from table1 lateral view explode(qual, gual) q as myq1, myq2;" +
                "select s2.acc_id, tag1, s1.id from " +
                "(select tab1.account_id acc_id, tab1.tag tag1, tab2.id from rstore.query_hists tab1 join rstore.cluster_nodes  tab2 on tab1.account_id=tab2.account_id where tab2.account_id>0) s1 " +
                "join " +
                "(select id, account_id as acc_id, created_at, deleted_at from rstore.clusters where id>100) s2 on s1.acc_id=s2.acc_id";

        String result = "{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"EXPLODE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"QUAL\"},{\"type\":\"identifier\",\"name\":\"GUAL\"}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"myq2\"},{\"type\":\"identifier\",\"name\":\"myq1\"}]}},{\"type\":\"identifier\",\"name\":\"TABLE1\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MYQ\"},{\"type\":\"identifier\",\"name\":\"NAME\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(3);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }

    @Test
    public void testSlightlyComplexLateralView() throws Exception {
        String command = "insert overwrite table tenaliV2.usagemap partition (submit_time, source)\n" +
                "                        select  sub.query, sub.q_id, usagetable.tbl, usagetable.col, usagetable.usg, sub.account_id,\n" +
                "                        sub.submit_time, sub.source as source from (select n.query as query, n.query_hists_id as q_id,\n" +
                "                        n.q_ast as q_ast, n.account_id as account_id, n.submit_time as submit_time, n.source as source from tenaliV2.galaxy\n" +
                "                        as n where n.submit_time in ( '2019-02-20' ) and n.account_id IN (7845,4020) ) as sub lateral view\n" +
                "                        usageUDTFfromHiveTables(sub.query,sub.q_ast, sub.account_id) usagetable as tbl, col, usg;";

        String result = "{\"type\":\"insert\",\"table\":{\"type\":\"identifier\",\"name\":\"TENALIV2.USAGEMAP\"},\"from\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"USAGEUDTFFROMHIVETABLES\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.QUERY\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.Q_AST\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.ACCOUNT_ID\"}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"col\"},{\"type\":\"identifier\",\"name\":\"usg\"},{\"type\":\"identifier\",\"name\":\"tbl\"}]}},{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.SUBMIT_TIME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.ACCOUNT_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.QUERY\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.QUERY_HISTS_ID\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.Q_AST\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.SUBMIT_TIME\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.SOURCE\"}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.QUERY\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.QUERY_HISTS_ID\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.SUBMIT_TIME\"},{\"type\":\"identifier\",\"name\":\"TENALIV2.GALAXY.SOURCE\"},{\"type\":\"identifier\",\"name\":\"USAGETABLE.USG\"},{\"type\":\"identifier\",\"name\":\"USAGETABLE.COL\"},{\"type\":\"identifier\",\"name\":\"USAGETABLE.TBL\"}]}},\"dynamicPartitions\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"submit_time\"},{\"type\":\"identifier\",\"name\":\"source\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }

    @Test
    public void testComplexJoinQuery2() throws Exception {
        String command = "select s2.acc_id, tag1, s1.id from " +
                "(select tab1.account_id acc_id, tab1.tag tag1, tab2.id from rstore.query_hists tab1 join rstore.cluster_nodes  tab2 on tab1.account_id=tab2.account_id where tab2.account_id>0) s1 " +
                "join " +
                "(select id, account_id as acc_id, created_at, deleted_at from rstore.clusters where id>100) s2 on s1.acc_id=s2.acc_id";

        String result = "{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ACCOUNT_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS\"},\"rightNode\":{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ACCOUNT_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.TAG\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ID\"}]}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTERS\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.CREATED_AT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTERS.DELETED_AT\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.TAG\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ID\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testComplexJoinQuery3() throws Exception {
        String command = "SELECT account_id, count(*) as cnt FROM \n" +
                "(SELECT h.id AS id, h.dt, h.account_id, h.status, coalesce(program, cmdline) as qsql FROM rstore.query_hists h JOIN rstore.spark_commands s ON h.command_id=s.id and h.dt=s.dt AND h.dt>='2019-02-01' AND status='done') y\n" +
                "LEFT JOIN\n" +
                "(SELECT DISTINCT query_hist_id, sql_app_id, command_id\n" +
                "   FROM (SELECT account_id, command_id, cluster_id, cluster_inst_id, json_extract(event_data,'$.executedQueryInfo.applicationId') as sql_app_id,  \n" +
                "\t\t json_extract(event_data,'$.executedQueryInfo.queryhistId') as query_hist_id, json_extract(event_data,'$.executedQueryInfo.status') AS status, json_extract(event_data,'$.executedQueryInfo.timeTakenMs') as time_taken FROM processed_v2.spark WHERE event_date>='2019-02-01' AND event_type='CLUSTER.SPARK.METRICS.SQL')s\n" +
                "    LEFT JOIN\n" +
                "    (SELECT json_extract(event_data,'$.id') AS metric_app_id FROM processed_v2.spark WHERE event_date>='2019-02-01' AND \n" +
                "     event_type='CLUSTER.SPARK.METRICS') t\n" +
                "    ON s.sql_app_id = t.metric_app_id) x\n" +
                "ON x.query_hist_id = y.id \n" +
                "WHERE query_hist_id is not NULL and qsql is not null and length(qsql)>50\n" +
                "group by account_id\n" +
                "order by 1 desc\n";


        String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IS NOT NULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IS NOT NULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"COALESCE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.PROGRAM\"},{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.CMDLINE\"}]}}]}}]}},{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"LENGTH\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"COALESCE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.PROGRAM\"},{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.CMDLINE\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"orderBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS\"},\"rightNode\":{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.ID\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.DT\"}]}}]}},{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.STATUS\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.STATUS\"},{\"type\":\"function\",\"functionName\":\"COALESCE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.PROGRAM\"},{\"type\":\"identifier\",\"name\":\"RSTORE.SPARK_COMMANDS.CMDLINE\"}]}}]}},\"rightNode\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.COMMAND_ID\"},{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.CLUSTER_ID\"},{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.CLUSTER_INST_ID\"},{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"}]},\"keywords\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DISTINCT\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"JSON_EXTRACT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.SPARK.EVENT_DATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}}";

        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testMultipleJoinQuery() throws Exception {
        String command = "SELECT id, get_json(u.json, 'location') as info, to_date(created_at) as dt FROM db_users u JOIN " +
                "(SELECT by_date.location, dt, num_users * 1000.0 / total_users as frac_of_location, num_users, total_users FROM " +
                "(SELECT get_json(json, 'location') as location, to_date(created_at) as dt, count(*) num_users FROM db_users " +
                "WHERE to_date(created_at) >= '2016-08-13'  AND to_date(created_at) <= '2016-08-13'  AND LENGTH(get_json(json, 'location')) > 3  " +
                "GROUP BY get_json(json, 'location'), to_date(created_at)) by_date " +
                "JOIN " +
                "(SELECT get_json(json, 'location') as location, " +
                "count(*) total_users FROM db_users  WHERE LENGTH(get_json(json, 'location')) > 3  GROUP BY get_json(json, 'location')  " +
                "HAVING count(*) > 5000) common_locations ON common_locations.location = by_date.location) loc_frac_by_date " +
                "ON get_json(u.json, 'location') = loc_frac_by_date.location AND to_date(u.created_at) = loc_frac_by_date.dt " +
                "WHERE loc_frac_by_date.frac_of_location > 7 DISTRIBUTE BY dt limit 100";


        String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"/\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"*\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"identifier\",\"name\":\"DB_USERS\"},\"rightNode\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"<=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"LENGTH\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DB_USERS\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"LENGTH\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DB_USERS\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}},{\"type\":\"operator\",\"operator\":\"/\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"*\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DB_USERS.JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DB_USERS.CREATED_AT\"}]}},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}}]}}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DB_USERS.JSON\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CREATED_AT\"}]}},{\"type\":\"identifier\",\"name\":\"ID\"}]},\"keywords\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"TOK_DISTRIBUTEBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DT\"}]}}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testPositionalOrdinates() throws Exception {
        String command = "select s2.acc_id, tag1, count(DISTINCT acc_id) as cnt from " +
                "(select tab1.account_id acc_id, tab1.tag tag1, tab2.id from rstore.query_hists tab1 join rstore.cluster_nodes  tab2 " +
                "on tab1.account_id=tab2.account_id where tab2.account_id>0) s1 " +
                "join " +
                "(select id, account_id as acc_id, created_at, deleted_at from rstore.clusters where id>100) s2 on s1.acc_id=s2.acc_id " +
                "group by 1,2 order by 3";


        String result = "{\"type\":\"select\",\"orderBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"COUNT DISTINCT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]}}]},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.TAG\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ACCOUNT_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS\"},\"rightNode\":{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ACCOUNT_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.TAG\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTER_NODES.ID\"}]}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTERS\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.CREATED_AT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.CLUSTERS.DELETED_AT\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.TAG\"},{\"type\":\"function\",\"functionName\":\"COUNT DISTINCT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]}}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


        @Test
        public void testSelect() throws Exception {
            String command = "SELECT logdate, site_key, survey_id, placement_key, question_id, answer_id, " +
                    "tm_client_id, auction_id, exposed, correct FROM marketing.stats_log_survey " +
                    "WHERE survey_id='ZmOwqVvLFKtWroPKX5VN' AND event IN ('svyresp','svystart','svycomp') " +
                    "AND logdate>'2015-09-01' GROUP BY logdate, site_key, survey_id, placement_key, " +
                    "question_id, answer_id, tm_client_id, auction_id, exposed, correct";


            String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SURVEY_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CORRECT\"},{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"EXPOSED\"},{\"type\":\"identifier\",\"name\":\"ANSWER_ID\"},{\"type\":\"identifier\",\"name\":\"TM_CLIENT_ID\"},{\"type\":\"identifier\",\"name\":\"SURVEY_ID\"},{\"type\":\"identifier\",\"name\":\"QUESTION_ID\"},{\"type\":\"identifier\",\"name\":\"PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"SITE_KEY\"},{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MARKETING.STATS_LOG_SURVEY\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CORRECT\"},{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"EXPOSED\"},{\"type\":\"identifier\",\"name\":\"ANSWER_ID\"},{\"type\":\"identifier\",\"name\":\"TM_CLIENT_ID\"},{\"type\":\"identifier\",\"name\":\"SURVEY_ID\"},{\"type\":\"identifier\",\"name\":\"QUESTION_ID\"},{\"type\":\"identifier\",\"name\":\"PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"SITE_KEY\"},{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]}}";
            CommandContext ctx = SqlCommandTestHelper.parseHive(command);
            CommandContext cctx = ctx.getChild(0);

            Object ast = cctx.getQueryContext().getTenaliAst();
            assertEquals(result, getTransformedString(ast));
        }


        @Test
        public void testComplex() throws Exception {
            String command = "select to_date(qh.created_at) as dt,  count(qh.id) as num_queries " +
                    "from query_hists qh join user_info ui on qh.qbol_user_id = ui.qu_id " +
                    "join canonical_accounts externals on externals.id = ui.a_id " +
                    "where to_date(qh.created_at) >= '2019-01-01' " +
                    "and command_type = 'HiveCommand' and qlog like 'temp_temp' " +
                    "and   customer_name like '${customer=%}' " +
                    "group by  to_date(qh.created_at) " ;


            String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.CREATED_AT\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.COMMAND_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.QLOG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CUSTOMER_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.CREATED_AT\"}]}}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS\"},\"rightNode\":{\"type\":\"identifier\",\"name\":\"USER_INFO\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.QBOL_USER_ID\"},{\"type\":\"identifier\",\"name\":\"USER_INFO.QU_ID\"}]}}},\"rightNode\":{\"type\":\"identifier\",\"name\":\"CANONICAL_ACCOUNTS\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CANONICAL_ACCOUNTS.ID\"},{\"type\":\"identifier\",\"name\":\"USER_INFO.A_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.CREATED_AT\"}]}},{\"type\":\"function\",\"functionName\":\"COUNT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEFAULT.QUERY_HISTS.ID\"}]}}]}}";
            CommandContext ctx = SqlCommandTestHelper.parseHive(command);
            CommandContext cctx = ctx.getChild(0);

            Object ast = cctx.getQueryContext().getTenaliAst();
            assertEquals(result, getTransformedString(ast));
        }


    @Test
    public void testCTE() throws Exception {
        String command =
                "-- Comment here \nWITH Sales_CTE \n" +
                "AS  \n" +
                "-- Define the CTE query  \n" +
                "(  \n" +
                "    SELECT SalesPersonID, SalesOrderID, YEAR(OrderDate) AS SalesYear  \n" +
                "    FROM Sales.SalesOrderHeader  \n" +
                "    WHERE SalesPersonID IS NOT NULL  \n" +
                ")  \n" +
                "-- Define the outer query referencing the CTE name.  \n" +
                "SELECT SalesPersonID, COUNT(SalesOrderID) AS TotalSales, SalesYear  \n" +
                "FROM Sales_CTE  \n" +
                "GROUP BY SalesYear, SalesPersonID  \n" +
                "ORDER BY SalesPersonID, SalesYear;  " ;



        String result = "{\"type\":\"select\",\"orderBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SALESPERSONID\"},{\"type\":\"function\",\"functionName\":\"YEAR\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORDERDATE\"}]}}]},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"YEAR\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORDERDATE\"}]}},{\"type\":\"identifier\",\"name\":\"SALESPERSONID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SALES_CTE\"}]},\"with\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"select\",\"where\":{\"type\":\"function\",\"functionName\":\"IS NOT NULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SALESPERSONID\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SALES.SALESORDERHEADER\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"YEAR\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORDERDATE\"}]}},{\"type\":\"identifier\",\"name\":\"SALESPERSONID\"},{\"type\":\"identifier\",\"name\":\"SALESORDERID\"}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SALESPERSONID\"},{\"type\":\"function\",\"functionName\":\"COUNT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SALESORDERID\"}]}},{\"type\":\"function\",\"functionName\":\"YEAR\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORDERDATE\"}]}}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testCTAS() throws Exception {
        String command = "CREATE TABLE myflightinfo2007 AS\n" +
                "    SELECT Year, Month, DepTime, ArrTime, FlightNum, Origin, Dest FROM FlightInfo2007\n" +
                "    WHERE (Month = 7 AND DayofMonth = 3) AND (Origin='JFK' AND Dest='ORD');" ;


        String result = "{\"type\":\"ddl\",\"ddlToken\":\"TOK_CREATETABLE\",\"selectNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MONTH\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DAYOFMONTH\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORIGIN\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DEST\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"FLIGHTINFO2007\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MONTH\"},{\"type\":\"identifier\",\"name\":\"ORIGIN\"},{\"type\":\"identifier\",\"name\":\"ARRTIME\"},{\"type\":\"identifier\",\"name\":\"YEAR\"},{\"type\":\"identifier\",\"name\":\"DEPTIME\"},{\"type\":\"identifier\",\"name\":\"FLIGHTNUM\"},{\"type\":\"identifier\",\"name\":\"DEST\"}]}},\"tableNode\":{\"type\":\"identifier\",\"name\":\"MYFLIGHTINFO2007\"}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }




    @Test
    public void testComplexJoin2() throws Exception {
        String command = "SELECT matched_events.dt, 'api' AS environment, matched_events.account_id, COALESCE(total_events, 0) AS total_events, total_queries,  matched_queries " +
                "FROM   (SELECT presto_queries.dt AS dt,  account_id, Count(*) AS total_queries,  Sum(CASE  WHEN presto_events.command_id IS NULL THEN 0  ELSE 1  END) AS matched_queries  " +
                "        FROM   (SELECT dt, id, account_id  FROM   rstore.query_hists WHERE  dt >= '2019-02-21' AND dt <= '2019-02-28' AND command_type = 'PrestoCommand') presto_queries  " +
                " LEFT JOIN (SELECT command_id AS command_id,  Count(*)  FROM   processed_v2.presto  WHERE  event_date >= '2019-02-21' AND event_date <= '2019-02-28' GROUP  BY event_date,  command_id,  account_id) presto_events  " +
                "   ON presto_queries.id = presto_events.command_id  " +
                "        GROUP  BY presto_queries.dt, presto_queries.account_id) matched_events  " +
                "  LEFT JOIN (SELECT event_date,  account_id,  Count(*) AS total_events  FROM   processed_v2.presto  WHERE  event_date >= '2019-02-21' and event_date <= '2019-02-28' " +
                "                  GROUP  BY account_id,  event_date) total_events  ON total_events.event_date = matched_events.dt  AND total_events.account_id = matched_events.account_id " ;



        String result = "{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"select\",\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"<=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"<=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IS NULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"<=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROCESSED_V2.PRESTO.EVENT_DATE\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"}]}}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.DT\"},{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.ACCOUNT_ID\"},{\"type\":\"function\",\"functionName\":\"COALESCE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"COUNT\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IS NULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"RSTORE.QUERY_HISTS.COMMAND_ID\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testDropTable() throws Exception {
        String command = "use mydefault;\u0006drop table tmp_klynch_ebay_conversions_1550485623;\u0006drop table if exists tmp_klynch_ebay_conversions_1550485742; drop table if exists study.referencemaster_sushi_google_20171030_091435;" ;


        String result = "{\"type\":\"ddl\",\"ddlToken\":\"DROP_TABLE\",\"selectNode\":null,\"tableNode\":{\"type\":\"identifier\",\"name\":\"MYDEFAULT.TMP_KLYNCH_EBAY_CONVERSIONS_1550485623\"}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(1);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testCreateTable() throws Exception {
        String command = "drop table if exists study.referencemaster_sushi_google_20171030_091435;\n" +
                "CREATE EXTERNAL TABLE IF NOT EXISTS study.referencemaster_sushi_google_20171030_091435 (HHID BIGINT,num_inds BIGINT,kbm_num_inds BIGINT,age_i INT,age_max INT,age_min INT,number_of_children INT,home_value INT,hh_income INT,children_ind STRING,hh_income_ind STRING,home_value_ind STRING,age_ind STRING,children_ages_0_2_flg INT,children_ages_3_5_flg INT,children_ages_6_10_flg INT,children_ages_11_15_flg INT,children_ages_16_18_flg INT,presence_of_child_flg INT,ages_18_19_flg INT,ages_20_29_flg INT,ages_30_39_flg INT,ages_40_49_flg INT,ages_50_59_flg INT,ages_60_64_flg INT,ages_65_plus_flg INT,state STRING,dma_code INT,female_present INT,male_present INT,hoh_ethnic_code STRING,afr_american_flg INT,hispanic_flg INT,asian_flg INT,european_flg INT,nat_american_flg INT,mid_eastern_flg INT,other_ethnic_flg INT,dsi_flg INT,tgt_flg INT,rad_flg INT,gfk_flg INT,cvs_flg INT,bjs_flg INT,sw_flg INT,dg_flg INT,bv_flg INT,ab_flg INT,swbyod_flg INT,marsh_flg INT,pricechopper_flg INT,brookshire_flg INT,weis_flg INT,spartan_flg INT,winndixie_flg INT,dagostino_flg INT,bashas_flg INT,martins_flg INT,lowes_flg INT,exclusion_flg INT,valid_demo_flg INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY '124' ESCAPED BY '\\\\' STORED AS TEXTFILE LOCATION 's3://p-measurement/reference-master/sushi_universe_2019-03-04_09-57-52'" ;


        String result = "{\"type\":\"ddl\",\"ddlToken\":\"TOK_CREATETABLE\",\"selectNode\":null,\"tableNode\":{\"type\":\"identifier\",\"name\":\"STUDY.REFERENCEMASTER_SUSHI_GOOGLE_20171030_091435\"}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(1);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }

    @Test
    public void testSample1() throws Exception {
        String command = "\u0006alter table mm_viewability_events_test recover partitions;\u0006\u0006select \u0006    report_timestamp,\u0006    to_date(report_timestamp) as impression_date,\u0006    campaign_name, \u0006    a.campaign_id, \u0006    strat.goal_type as strategy_goal_type,\u0006 " +
                "case when length(delphi_metadata)<1 then 'tree brain'\u0006   when delphi_metadata like '%_sb%' then 'shared brain'\u0006   when delphi_metadata like '%_tf%' then 'log brain' else delphi_metadata end as brain_type, \u0006    " +
                "case when watermark=0 then 'Non-Watermark' else 'Watermark' end as wm_flag,\u0006 is_viewable as viewable_impressions, \u0006 is_measurable as measurable_impressions, \u0006    1 as impressions,\u0006 " +
                "clicks as clicks, \u0006 total_spend_cpm/1000 as spend, \u0006 sum(total_spend_cpm)/count(a.auction_id) as cpm, \u0006 coalesce(sum(total_spend_cpm)/sum(is_viewable),0) as vcpm, \u0006-- coalesce(sum(in_view_100)/sum(is_measurable),0) as in_view_rate, \u0006-- coalesce(sum(clicks)/count(a.auction_id),0) as ctr, \u0006-- coalesce(sum(total_spend_cpm/1000)/ sum(clicks),0) as cpc, \u0006    video_start as video_start, \u0006    video_complete as video_complete, \u0006    pv_conversions, \u0006    pc_conversions, \u0006    pv_revenue, \u0006    pc_revenue, \u0006    device, \u0006    case when channel_type in (8,9) then 'in-app' else 'web' end as inventory_type\u0006-- coalesce(sum(video_complete)/sum(video_start),0) as vcr\u0006\u0006 from \u0006\u0006 (select \u0006            report_timestamp,\u0006   delphi_metadata,\u0006   auction_id,\u0006   campaign_id, \u0006   campaign_name, \u0006            strategy_id,\u0006  " +
                " watermark, \u0006   total_spend_cpm, \u0006            device,\u0006            channel_type\u0006from \u0006 mm_impressions_ct imp\u0006 where organization_id = 100977\u0006 and impression_date between date_sub('2019-03-04',1) and date_add('2019-03-05',1)\u0006    and to_date(report_timestamp) between '2019-03-04' and '2019-03-05'\u0006 and campaign_id in (614838,617477)\u0006 ) a \u0006join t1_meta_strategy_rs strat on a.strategy_id = strat.id\u0006\u0006left join \u0006\u0006  (\u0006  select \u0006  imp_auction_id, \u0006     event_timestamp_gmt,\u0006  case when viewability_event_name = 'is_viewable' then 1 else 0 end as is_viewable, \u0006    case when viewability_event_name = 'is_measurable' then 1 else 0 end as is_measurable, \u0006    case when viewability_event_name = 'is_viewable_100%' then 1 else 0 end as in_view_100\u0006 \u0006 from \u0006  mm_viewability_events_test \u0006 where organization_id in (100977)\u0006 and event_date between date_sub('2019-03-04',1) and date_add('2019-03-05',1)\u0006    and to_date(event_report_timestamp) between '2019-03-04' and '2019-03-05'\u0006 and campaign_id in (614838,617477)\u0006 ) b\u0006\u0006on a.auction_id = b.imp_auction_id\u0006\u0006left join \u0006(\u0006  select \u0006  imp_auction_id, \u0006  sum(case when event_subtype = 'q4' then 1 else 0 end) as video_complete,\u0006  sum(case when event_subtype = 'vst' then 1 else 0 end) as video_start, \u0006  sum(case when event_type = 'click' then 1 else 0 end) as clicks, \u0006        sum(case when event_type = 'conversion' and pv_pc_flag = 'V' then 1 else 0 end) as pv_conversions, \u0006         sum(case when event_type = 'conversion' and pv_pc_flag = 'C' then 1 else 0 end) as pc_conversions, \u0006        sum(case when pv_pc_flag = 'V' then mm_v1 else 0 end) as pv_revenue, \u0006        sum(case when pv_pc_flag = 'C' then mm_v1 else 0 end) as pc_revenue\u0006 from \u0006  mm_attributed_events_ct\u0006 where organization_id in (100977)\u0006 and event_date between date_sub('2019-03-04',1) and date_add('2019-03-05',1)\u0006    and to_date(event_report_timestamp) between '2019-03-04' and '2019-03-05'\u0006 and campaign_id in (614838,617477)\u0006    \u0006    group by imp_auction_id\u0006 ) c \u0006\u0006 on a.auction_id = c.imp_auction_id\u0006\u0006\u0006\u0006\n";


        String result = "{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"IMPRESSION_DATE\"},{\"type\":\"function\",\"functionName\":\"DATE_SUB\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"DATE_ADD\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_IMPRESSIONS_CT\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"identifier\",\"name\":\"STRATEGY_ID\"},{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_NAME\"},{\"type\":\"identifier\",\"name\":\"DEVICE\"},{\"type\":\"identifier\",\"name\":\"CHANNEL_TYPE\"},{\"type\":\"identifier\",\"name\":\"WATERMARK\"},{\"type\":\"identifier\",\"name\":\"TOTAL_SPEND_CPM\"},{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]}},\"rightNode\":{\"type\":\"identifier\",\"name\":\"T1_META_STRATEGY_RS\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"STRATEGY_ID\"},{\"type\":\"identifier\",\"name\":\"T1_META_STRATEGY_RS.ID\"}]}}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_DATE\"},{\"type\":\"function\",\"functionName\":\"DATE_SUB\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"DATE_ADD\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_REPORT_TIMESTAMP\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_VIEWABILITY_EVENTS_TEST\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"EVENT_TIMESTAMP_GMT\"},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_DATE\"},{\"type\":\"function\",\"functionName\":\"DATE_SUB\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"DATE_ADD\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_REPORT_TIMESTAMP\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_ATTRIBUTED_EVENTS_CT\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"}]}},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_NAME\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"<\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"LENGTH\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"WATERMARK\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"/\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOTAL_SPEND_CPM\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"/\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOTAL_SPEND_CPM\"}]}},{\"type\":\"function\",\"functionName\":\"COUNT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]}}]}},{\"type\":\"function\",\"functionName\":\"COALESCE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"/\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOTAL_SPEND_CPM\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"identifier\",\"name\":\"DEVICE\"},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CHANNEL_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"T1_META_STRATEGY_RS.GOAL_TYPE\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(1);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testSample2() throws Exception {
        String command = "select      report_timestamp,     to_date(report_timestamp) as impression_date,     campaign_name,      a.campaign_id,      strat.goal_type as strategy_goal_type,  \n" +
                "case when length(delphi_metadata)<1 then 'tree brain'    \n" +
                "when delphi_metadata like '%_sb%' then 'shared brain'    \n" +
                "when delphi_metadata like '%_tf%' then 'log brain' else delphi_metadata end as brain_type,      \n" +
                "case when watermark=0 then 'Non-Watermark' else 'Watermark' end as wm_flag,  \n" +
                "is_viewable as viewable_impressions,   is_measurable as measurable_impressions,      1 as impressions,  clicks as clicks,   total_spend_cpm/1000 as spend,  \n" +
                "-- sum(total_spend_cpm)/count(a.auction_id) as cpm,  -- coalesce(sum(total_spend_cpm)/sum(is_viewable),0) as vcpm,  -- coalesce(sum(in_view_100)/sum(is_measurable),0) as in_view_rate,  \n" +
                "-- coalesce(sum(clicks)/count(a.auction_id),0) as ctr,  -- coalesce(sum(total_spend_cpm/1000)/ sum(clicks),0) as cpc,      video_start as video_start,      \n" +
                "video_complete as video_complete,      pv_conversions,      pc_conversions,      pv_revenue,      pc_revenue,      device,      \n" +
                "case when channel_type in (8,9) then 'in-app' else 'web' end as inventory_type \n" +
                "-- coalesce(sum(video_complete)/sum(video_start),0) as vcr \n  " +
                "from \u0006\u0006 " +
                "(select \u0006  report_timestamp,\u0006   delphi_metadata,\u0006   auction_id,\u0006   campaign_id, " +
                "\u0006   campaign_name, \u0006            strategy_id,\u0006   watermark, \u0006   total_spend_cpm, \u0006            " +
                "device,\u0006            channel_type\u0006from \u0006 mm_impressions_ct imp\u0006 where organization_id = 100977\u0006 " +
                "and impression_date between date_sub('2019-03-04',1) and date_add('2019-03-05',1)\u0006    and to_date(report_timestamp) " +
                "between '2019-03-04' and '2019-03-05'\u0006 and campaign_id in (614838,617477)\u0006 ) a \u0006" +
                "" +
                "join t1_meta_strategy_rs strat on a.strategy_id = strat.id\u0006\u0006" +
                "" +
                "left join \u0006\u0006  (\u0006  select \u0006  imp_auction_id, \u0006     event_timestamp_gmt,\u0006  case when viewability_event_name = 'is_viewable' then 1 " +
                "else 0 end as is_viewable, \u0006    case when viewability_event_name = 'is_measurable' then 1 else 0 end as is_measurable, \u0006    " +
                "case when viewability_event_name = 'is_viewable_100%' then 1 else 0 end as in_view_100\u0006 \u0006 from \u0006  mm_viewability_events_test \u0006 where organization_id in (100977)\u0006 " +
                "and event_date between date_sub('2019-03-04',1) and date_add('2019-03-05',1)\u0006    and to_date(event_report_timestamp) between '2019-03-04' and '2019-03-05'\u0006 and campaign_id in (614838,617477)\u0006 ) b\u0006\u0006" +
                "on a.auction_id = b.imp_auction_id\u0006\u0006" +
                "" +
                "left join \u0006(\u0006  select \u0006  imp_auction_id, \u0006  sum(case when event_subtype = 'q4' then 1 else 0 end) as video_complete,\u0006  sum(case when event_subtype = 'vst' then 1 else 0 end) as video_start, " +
                "\u0006  sum(case when event_type = 'click' then 1 else 0 end) as clicks, \u0006        sum(case when event_type = 'conversion' and pv_pc_flag = 'V' then 1 else 0 end) as pv_conversions, \u0006         sum(case when event_type = 'conversion' and pv_pc_flag = 'C' then 1 else 0 end) as pc_conversions, \u0006        " +
                "sum(case when pv_pc_flag = 'V' then mm_v1 else 0 end) as pv_revenue, \u0006        sum(case when pv_pc_flag = 'C' then mm_v1 else 0 end) as pc_revenue\u0006 from \u0006  mm_attributed_events_ct\u0006 where organization_id in (100977)\u0006 and event_date between date_sub('2019-03-04',1) and date_add('2019-03-05',1)\u0006    " +
                "and to_date(event_report_timestamp) between '2019-03-04' and '2019-03-05'\u0006 and campaign_id in (614838,617477)\u0006    \u0006    group by imp_auction_id\u0006 ) c \u0006\u0006 on a.auction_id = c.imp_auction_id\u0006";


        String result = "{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"join\",\"joinType\":\"LEFT\",\"leftNode\":{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"IMPRESSION_DATE\"},{\"type\":\"function\",\"functionName\":\"DATE_SUB\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"DATE_ADD\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_IMPRESSIONS_CT\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"identifier\",\"name\":\"STRATEGY_ID\"},{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_NAME\"},{\"type\":\"identifier\",\"name\":\"DEVICE\"},{\"type\":\"identifier\",\"name\":\"CHANNEL_TYPE\"},{\"type\":\"identifier\",\"name\":\"WATERMARK\"},{\"type\":\"identifier\",\"name\":\"TOTAL_SPEND_CPM\"},{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]}},\"rightNode\":{\"type\":\"identifier\",\"name\":\"T1_META_STRATEGY_RS\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"STRATEGY_ID\"},{\"type\":\"identifier\",\"name\":\"T1_META_STRATEGY_RS.ID\"}]}}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_DATE\"},{\"type\":\"function\",\"functionName\":\"DATE_SUB\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"DATE_ADD\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_REPORT_TIMESTAMP\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_VIEWABILITY_EVENTS_TEST\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"EVENT_TIMESTAMP_GMT\"},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}}},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_DATE\"},{\"type\":\"function\",\"functionName\":\"DATE_SUB\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"DATE_ADD\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_REPORT_TIMESTAMP\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_ATTRIBUTED_EVENTS_CT\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"},{\"type\":\"identifier\",\"name\":\"IMP_AUCTION_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"},{\"type\":\"function\",\"functionName\":\"TO_DATE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"REPORT_TIMESTAMP\"}]}},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_NAME\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_ID\"},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"<\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"LENGTH\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"DELPHI_METADATA\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"WATERMARK\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VIEWABILITY_EVENT_NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"/\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOTAL_SPEND_CPM\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_SUBTYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PV_PC_FLAG\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"MM_V1\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"identifier\",\"name\":\"DEVICE\"},{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CHANNEL_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"T1_META_STRATEGY_RS.GOAL_TYPE\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testSample3() throws Exception {
        String command = "\u0006  select\u0006   at.pv_time_lag,\u0006 at.pixel_id,\u0006 e.v10,\u0006 at.campaign_id,\u0006 at.event_report_timestamp,\u0006 at.device_type,\u0006 at.campaign_name,\u0006 at.event_timestamp_gmt,\u0006 e.s9,\u0006 e.s8,\u0006 at.pixel_name,\u0006 e.s2,\u0006 e.s1,\u0006 e.s7,\u0006 e.s6,\u0006 e.s5,\u0006 e.s4,\u0006 at.organization_name,\u0006 at.strategy_name,\u0006 at.event_date,\u0006 e.s10,\u0006 at.agency_id,\u0006 at.organization_id,\u0006 e.v1,\u0006 at.agency_name,\u0006 e.v3,\u0006 e.v4,\u0006 e.v5,\u0006 e.v6,\u0006 e.v7,\u0006 e.v8,\u0006 e.v9,\u0006 at.impression_timestamp_gmt,\u0006 at.advertiser_id,\u0006 at.pc_time_lag,\u0006 at.country,\u0006 e.v2,\u0006 e.s3,\u0006 at.strategy_id,\u0006 at.browser\u0006  from\u0006   (\u0006     select * from\u0006     mm_events \u0006   ) e\u0006   join \u0006   (\u0006     select * from\u0006     mm_attributed_events_ac\u0006   ) at\u0006   on \u0006      e.pixel_id = at.pixel_id \u0006      and e.mm_uuid = at.mm_uuid\u0006      and e.timestamp_gmt = at.event_timestamp_gmt\u0006  where\u0006   at.advertiser_id in (206401)\u0006 and at.organization_id in (101607) and e.organization_id in (101607)\u0006 and at.agency_id in (117415)\u0006 and at.pixel_id in (1299912)\u0006 and at.event_type = 'conversion'\u0006 and at.event_date between '2019-03-04' and '2019-03-04'\u0006 and e.event_date between '2019-03-04' and '2019-03-04'\u0006\n";


        String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.ADVERTISER_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"E.ORGANIZATION_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.AGENCY_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.PIXEL_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.EVENT_TYPE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"BETWEEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"E.EVENT_DATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_EVENTS\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},\"rightNode\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MM_ATTRIBUTED_EVENTS_AC\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"E.PIXEL_ID\"},{\"type\":\"identifier\",\"name\":\"AT.PIXEL_ID\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"E.MM_UUID\"},{\"type\":\"identifier\",\"name\":\"AT.MM_UUID\"}]}}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"E.TIMESTAMP_GMT\"},{\"type\":\"identifier\",\"name\":\"AT.EVENT_TIMESTAMP_GMT\"}]}}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AT.STRATEGY_ID\"},{\"type\":\"identifier\",\"name\":\"E.V1\"},{\"type\":\"identifier\",\"name\":\"E.V2\"},{\"type\":\"identifier\",\"name\":\"E.V3\"},{\"type\":\"identifier\",\"name\":\"E.V4\"},{\"type\":\"identifier\",\"name\":\"E.V5\"},{\"type\":\"identifier\",\"name\":\"AT.COUNTRY\"},{\"type\":\"identifier\",\"name\":\"AT.ORGANIZATION_NAME\"},{\"type\":\"identifier\",\"name\":\"AT.ORGANIZATION_ID\"},{\"type\":\"identifier\",\"name\":\"E.V6\"},{\"type\":\"identifier\",\"name\":\"E.V7\"},{\"type\":\"identifier\",\"name\":\"E.V8\"},{\"type\":\"identifier\",\"name\":\"E.V9\"},{\"type\":\"identifier\",\"name\":\"AT.EVENT_TIMESTAMP_GMT\"},{\"type\":\"identifier\",\"name\":\"AT.STRATEGY_NAME\"},{\"type\":\"identifier\",\"name\":\"AT.DEVICE_TYPE\"},{\"type\":\"identifier\",\"name\":\"AT.EVENT_DATE\"},{\"type\":\"identifier\",\"name\":\"AT.EVENT_REPORT_TIMESTAMP\"},{\"type\":\"identifier\",\"name\":\"AT.BROWSER\"},{\"type\":\"identifier\",\"name\":\"AT.PC_TIME_LAG\"},{\"type\":\"identifier\",\"name\":\"E.S1\"},{\"type\":\"identifier\",\"name\":\"E.S2\"},{\"type\":\"identifier\",\"name\":\"E.S3\"},{\"type\":\"identifier\",\"name\":\"E.S4\"},{\"type\":\"identifier\",\"name\":\"E.S5\"},{\"type\":\"identifier\",\"name\":\"E.S10\"},{\"type\":\"identifier\",\"name\":\"E.S6\"},{\"type\":\"identifier\",\"name\":\"AT.CAMPAIGN_ID\"},{\"type\":\"identifier\",\"name\":\"E.S7\"},{\"type\":\"identifier\",\"name\":\"E.V10\"},{\"type\":\"identifier\",\"name\":\"E.S8\"},{\"type\":\"identifier\",\"name\":\"E.S9\"},{\"type\":\"identifier\",\"name\":\"AT.CAMPAIGN_NAME\"},{\"type\":\"identifier\",\"name\":\"AT.IMPRESSION_TIMESTAMP_GMT\"},{\"type\":\"identifier\",\"name\":\"AT.PV_TIME_LAG\"},{\"type\":\"identifier\",\"name\":\"AT.ADVERTISER_ID\"},{\"type\":\"identifier\",\"name\":\"AT.AGENCY_ID\"},{\"type\":\"identifier\",\"name\":\"AT.PIXEL_ID\"},{\"type\":\"identifier\",\"name\":\"AT.PIXEL_NAME\"},{\"type\":\"identifier\",\"name\":\"AT.AGENCY_NAME\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testSample4() throws Exception {
        String command = "set hive.cli.print.header=false;set hive.resultset.use.unique.column.names=false; " +
                "select  customer,  cluster,  data,  dt,  ingestedtime  from   (select  customer,  cluster,  data,  dt,  ingestedtime,  row_number() over (partition by get_json_object(cluster,'$.clusterid') order by cast(regexp_replace(regexp_replace(ingestedtime, 'T',' '),'Z','') as timestamp) desc) rnum   from dsa_production.aiq_raw_optimized  where dt='2018-01-23'  and source='get_compute_inventory') a   where rnum=1; ";


        String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"ROW_NUMBER\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"WINDOWSPEC\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"TOK_DISTRIBUTEBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON_OBJECT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CLUSTER\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"TOK_ORDERBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOK_TABSORTCOLNAMEDESC\"}]}}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DT\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SOURCE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"DSA_PRODUCTION.AIQ_RAW_OPTIMIZED\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"ROW_NUMBER\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"WINDOWSPEC\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"TOK_DISTRIBUTEBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"GET_JSON_OBJECT\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CLUSTER\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\"TOK_ORDERBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOK_TABSORTCOLNAMEDESC\"}]}}]}}]}},{\"type\":\"identifier\",\"name\":\"DT\"},{\"type\":\"identifier\",\"name\":\"DATA\"},{\"type\":\"identifier\",\"name\":\"INGESTEDTIME\"},{\"type\":\"identifier\",\"name\":\"CUSTOMER\"},{\"type\":\"identifier\",\"name\":\"CLUSTER\"}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CUSTOMER\"},{\"type\":\"identifier\",\"name\":\"CLUSTER\"},{\"type\":\"identifier\",\"name\":\"DATA\"},{\"type\":\"identifier\",\"name\":\"DT\"},{\"type\":\"identifier\",\"name\":\"INGESTEDTIME\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(2);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }

    @Test
    public void testSample5() throws Exception {
        String command = " SELECT    logdate as the_date,    hour as the_hour,    campaign_key,    campaign_placement_id,    campaign_placement_name,    campaign_placement_key,    stats.ad_key,    a.ad_template,    opt_metric,    threshold,    SUM(complete100) AS Complete100,    SUM(streams_viewed) AS Streams_viewed  FROM    \n" +
                "(       SELECT          logdate,          hour,          campaign_key,          placement_key,          ad_key,          IF(Isnull(streams_viewed), 0, streams_viewed) AS Streams_viewed,          IF(Isnull(complete100), 0, complete100) AS Complete100        FROM          core.stats_log        WHERE          logdate = '2019-03-10'           and hour = '11'     )    stats     \n" +
                "join       \n" +
                "(          SELECT             campaign_placement.campaign_placement_key AS campaign_placement_key,             campaign_placement.campaign_placement_id AS campaign_placement_id,             campaign_placement.campaign_placement_name AS campaign_placement_name,             opt_metric,             threshold           FROM             promo2.campaign_placement             \n" +
                " join                \n" +
                "(                   SELECT                      campaign_placement_id,                      opt_metric,                      threshold                    FROM                      promo2.campaign_placement_optimization_filter                    WHERE                      upper(opt_metric) LIKE '%COMPLETIONS_KPI%'                       AND status = 'Active'                )                selected_placements                \n" +
                " ON campaign_placement.campaign_placement_id = selected_placements.campaign_placement_id       )       selected_placements_decorated       \n" +
                " ON selected_placements_decorated.campaign_placement_key = stats.placement_key     \n" +
                "join       promo2.ad a        ON stats.ad_key = a.ad_key     GROUP BY    logdate,    hour,    campaign_key,    campaign_placement_id,    campaign_placement_name,    campaign_placement_key,    stats.ad_key,    a.ad_template,    opt_metric,    threshold";


        String result = "{\"type\":\"select\",\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"HOUR\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_KEY\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_ID\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_NAME\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"AD_KEY\"},{\"type\":\"identifier\",\"name\":\"OPT_METRIC\"},{\"type\":\"identifier\",\"name\":\"THRESHOLD\"},{\"type\":\"identifier\",\"name\":\"PROMO2.AD.AD_TEMPLATE\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"HOUR\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CORE.STATS_LOG\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IF\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"ISNULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"STREAMS_VIEWED\"}]}},{\"type\":\"identifier\",\"name\":\"STREAMS_VIEWED\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"IF\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"ISNULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"COMPLETE100\"}]}},{\"type\":\"identifier\",\"name\":\"COMPLETE100\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"HOUR\"},{\"type\":\"identifier\",\"name\":\"AD_KEY\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_KEY\"},{\"type\":\"identifier\",\"name\":\"PLACEMENT_KEY\"}]}},\"rightNode\":{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"join\",\"joinType\":\"INNER\",\"leftNode\":{\"type\":\"identifier\",\"name\":\"PROMO2.CAMPAIGN_PLACEMENT\"},\"rightNode\":{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"LIKE\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"UPPER\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"OPT_METRIC\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"STATUS\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"PROMO2.CAMPAIGN_PLACEMENT_OPTIMIZATION_FILTER\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT_ID\"},{\"type\":\"identifier\",\"name\":\"THRESHOLD\"},{\"type\":\"identifier\",\"name\":\"OPT_METRIC\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_ID\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT_ID\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_ID\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_NAME\"},{\"type\":\"identifier\",\"name\":\"OPT_METRIC\"},{\"type\":\"identifier\",\"name\":\"THRESHOLD\"}]}},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"PLACEMENT_KEY\"}]}}},\"rightNode\":{\"type\":\"identifier\",\"name\":\"PROMO2.AD\"},\"joinCondition\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"AD_KEY\"},{\"type\":\"identifier\",\"name\":\"PROMO2.AD.AD_KEY\"}]}}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"HOUR\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_KEY\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_ID\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_NAME\"},{\"type\":\"identifier\",\"name\":\"CAMPAIGN_PLACEMENT.CAMPAIGN_PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"AD_KEY\"},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IF\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"ISNULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"COMPLETE100\"}]}},{\"type\":\"identifier\",\"name\":\"COMPLETE100\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"function\",\"functionName\":\"SUM\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"IF\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"ISNULL\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"STREAMS_VIEWED\"}]}},{\"type\":\"identifier\",\"name\":\"STREAMS_VIEWED\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"identifier\",\"name\":\"OPT_METRIC\"},{\"type\":\"identifier\",\"name\":\"THRESHOLD\"},{\"type\":\"identifier\",\"name\":\"PROMO2.AD.AD_TEMPLATE\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testBlockCommentMultipleQueries() throws Exception {
        String command = "/* some random comments \n\n here */" +
                "-- some random * comment here \n\r\n SELECT logdate, site_key, survey_id, placement_key, question_id, answer_id, " +
                "tm_client_id, auction_id, exposed, correct FROM marketing. stats_log_survey " +
                "WHERE survey_id='ZmOwqVvLFKtWroPKX5VN' AND event IN ('svyresp','svystart','svycomp') " +
                "AND logdate>'2015-09-01' GROUP BY logdate, site_key, survey_id, placement_key, " +
                "question_id, answer_id, tm_client_id, auction_id, exposed, correct;\n\r\n\n\r\n" +
                "/* some more random comments \n\n here \n\n*/" +
                "select to_date(qh.created_at) as dt,  count(qh.id) as num_queries " +
                "from query_hists qh join user_info ui on qh.qbol_user_id = ui.qu_id " +
                "join canonical_accounts externals on externals.id = ui.a_id " +
                "where to_date(qh.created_at) >= date_sub(from_unixtime(unix_timestamp()),30) " +
                "and command_type = 'HiveCommand' and qlog like '%\\\"EXECUTION_ENGINE\\\":\\\"tez\\\"%' " +
                "and   customer_name like \"${customer=%}\" " +
                "group by  to_date(qh.created_at) " +
                "order by dt asc";

        String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"AND\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"SURVEY_ID\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"function\",\"functionName\":\"IN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"EVENT\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CORRECT\"},{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"EXPOSED\"},{\"type\":\"identifier\",\"name\":\"ANSWER_ID\"},{\"type\":\"identifier\",\"name\":\"TM_CLIENT_ID\"},{\"type\":\"identifier\",\"name\":\"SURVEY_ID\"},{\"type\":\"identifier\",\"name\":\"QUESTION_ID\"},{\"type\":\"identifier\",\"name\":\"PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"SITE_KEY\"},{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"MARKETING.STATS_LOG_SURVEY\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"CORRECT\"},{\"type\":\"identifier\",\"name\":\"LOGDATE\"},{\"type\":\"identifier\",\"name\":\"EXPOSED\"},{\"type\":\"identifier\",\"name\":\"ANSWER_ID\"},{\"type\":\"identifier\",\"name\":\"TM_CLIENT_ID\"},{\"type\":\"identifier\",\"name\":\"SURVEY_ID\"},{\"type\":\"identifier\",\"name\":\"QUESTION_ID\"},{\"type\":\"identifier\",\"name\":\"PLACEMENT_KEY\"},{\"type\":\"identifier\",\"name\":\"SITE_KEY\"},{\"type\":\"identifier\",\"name\":\"AUCTION_ID\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testWindowFunctionComplex() throws Exception {
        String command = "select venuestate, venueseats, venuename,\n" +
                "first_value(venuename)\n" +
                "over(partition by venuestate\n" +
                "order by venueseats desc\n" +
                "rows between unbounded preceding and unbounded following)\n" +
                "from (select * from venue where venueseats >0) s\n" +
                "group by venuestate order by venuestate";

        String result = "{\"type\":\"select\",\"orderBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VENUESTATE\"}]},\"groupBy\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VENUESTATE\"}]},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VENUESEATS\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VENUE\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"FIRST_VALUE\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VENUENAME\"},{\"type\":\"operator\",\"operator\":\"WINDOWSPEC\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"TOK_DISTRIBUTEBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"VENUESTATE\"}]}},{\"type\":\"operator\",\"operator\":\"TOK_ORDERBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOK_TABSORTCOLNAMEDESC\"}]}}]}}]}},{\"type\":\"identifier\",\"name\":\"VENUESTATE\"},{\"type\":\"identifier\",\"name\":\"VENUESEATS\"},{\"type\":\"identifier\",\"name\":\"VENUENAME\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }


    @Test
    public void testWindowFunctionSimple() throws Exception {
        String command = "select id, ts\n" +
                "      ,case when ts-lag(ts,1,ts) over(partition by id order by ts) > 3000 then 1 else 0 end as col\n" +
                "      from tbl\n";

        String result = "{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TBL\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"WHEN\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\">\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"-\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TS\"},{\"type\":\"function\",\"functionName\":\"LAG\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TS\"},{\"type\":\"identifier\",\"name\":\"TS\"},{\"type\":\"operator\",\"operator\":\"WINDOWSPEC\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"operator\",\"operator\":\"TOK_DISTRIBUTEBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"ID\"}]}},{\"type\":\"operator\",\"operator\":\"TOK_ORDERBY\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TOK_TABSORTCOLNAMEASC\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"identifier\",\"name\":\"ID\"},{\"type\":\"identifier\",\"name\":\"TS\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }

    @Test
    public void testSqlDS() throws Exception {
        String command = "WITH a AS (\n" +
                "  SELECT substr(name, 1, 3) x FROM tab1 )\n" +
                "SELECT *\n" +
                "FROM a\n" +
                "WHERE x = 'foo'";

        String result = "{\"type\":\"select\",\"where\":{\"type\":\"operator\",\"operator\":\"=\",\"operands\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"SUBSTR\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}},\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"A\"}]},\"with\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"select\",\"from\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"TAB1\"}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"function\",\"functionName\":\"SUBSTR\",\"arguments\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"NAME\"},{\"type\":\"literal\",\"value\":\"TENALI_LITERAL\"}]}}]}}]},\"columns\":{\"type\":\"list\",\"operandlist\":[{\"type\":\"identifier\",\"name\":\"*\"}]}}";
        CommandContext ctx = SqlCommandTestHelper.parseHive(command);
        CommandContext cctx = ctx.getChild(0);

        Object ast = cctx.getQueryContext().getTenaliAst();
        assertEquals(result, getTransformedString(ast));
    }

}
